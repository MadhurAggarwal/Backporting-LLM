{"question": "What changes were made to the function 'parse_one_cookie' in the file 'libsoup/cookies/soup-cookie.c'?", "answer": "The function 'parse_one_cookie' was modified to clear the 'expires' field of the 'cookie' object before setting it to a new value. Old Code: `soup_cookie_set_expires (cookie, parse_date (&p));`. New Code: `g_clear_pointer (&cookie->expires, g_date_time_unref); cookie->expires = parse_date (&p);`."}
{"question": "What changes were made to the function 'soup_uri_copy' in the file 'libsoup/uri.c'?", "answer": "The function 'soup_uri_copy' was modified to read the port as an integer instead of a long.\nOld Code:\n```c\nlong port = soup_uri_get_port(uri);\n```\nNew Code:\n```c\nint port = soup_uri_get_port(uri);\n```"}
{"question": "Was there a change in the function 'soup_uri_decode_data_uri' in the file 'libsoup/uri.c'?", "answer": "Yes, the function 'soup_uri_decode_data_uri' was updated to fix a possible NULL dereference.\nOld Code:\n```c\nif (!data_uri) return NULL;\n```\nNew Code:\n```c\nif (!data_uri || !data_uri->path) return NULL;\n```"}
{"question": "What modifications were made to the 'SoupContentSniffer' in the file 'libsoup/content-sniffer.c'?", "answer": "The 'SoupContentSniffer' was updated to address a potential overflow issue.\nOld Code:\n```c\nsniffer->buffer_size = MAX_BUFFER_SIZE;\n```\nNew Code:\n```c\nsniffer->buffer_size = MIN(MAX_BUFFER_SIZE, input_size);\n```"}
{"question": "Were there changes to the parsing of headers in the file 'libsoup/headers.c'?", "answer": "Yes, the header parsing was made more robust against invalid input.\nOld Code:\n```c\nparam = g_strdup(input);\n```\nNew Code:\n```c\nparam = g_strdup_safe(input);\n```"}
{"question": "Was there a modification to the WebSocket handling in the file 'libsoup/websocket.c'?", "answer": "Yes, the WebSocket handling was updated to prevent being stuck in a read loop.\nOld Code:\n```c\nwhile (websocket->state == READING) {\n```\nNew Code:\n```c\nwhile (websocket->state == READING && !websocket->error) {\n```"}
{"question": "Was a new file added in the commit? If so, what is its name and path?", "answer": "Yes, a new file was added.\nFile Name: uz.po\nFile Path: po/uz.po"}
{"question": "Was the file 'po/LINGUAS' modified? If so, what changes were made?", "answer": "Yes, the file 'po/LINGUAS' was modified.\nChange: Added a new entry 'uz' to the list of languages."}
{"question": "What changes were made to the conditional statement in the function located in 'libsoup/http1/soup-body-input-stream.c'?", "answer": "The conditional statement was modified to correctly detect chunked trailers end. Old code: `if (strncmp (metabuf, \"\\r\\n\", nread) || strncmp (metabuf, \"\\n\", nread))`. New code: `if ((nread == 2 && strncmp (metabuf, \"\\r\\n\", nread) == 0) || (nread == 1 && strncmp (metabuf, \"\\n\", nread) == 0))`."}
{"question": "Was the path of the file 'libsoup/soup-cache-input-stream.c' changed?", "answer": "Yes, the path was changed.\nOld Path: libsoup/soup-cache-input-stream.c\nNew Path: libsoup/cache/soup-cache-input-stream.c"}
{"question": "Was the location of the message 'Connection terminated unexpectedly' changed?", "answer": "Yes, the location was changed.\nOld Location: libsoup/soup-body-input-stream.c:139, libsoup/soup-body-input-stream.c:170, libsoup/soup-body-input-stream.c:203, libsoup/soup-message-io.c:244\nNew Location: libsoup/http1/soup-body-input-stream.c:155, libsoup/http1/soup-body-input-stream.c:187, libsoup/http1/soup-body-input-stream.c:220, libsoup/http1/soup-message-io-data.c:77, libsoup/http2/soup-client-message-io-http2.c:408, libsoup/server/http2/soup-server-message-io-http2.c:431"}
{"question": "Was the location of the message 'Invalid seek request' changed?", "answer": "Yes, the location was changed.\nOld Location: libsoup/soup-body-input-stream.c:459\nNew Location: libsoup/http1/soup-body-input-stream.c:471"}
{"question": "Was the location of the message 'Cannot truncate SoupBodyInputStream' changed?", "answer": "Yes, the location was changed.\nOld Location: libsoup/soup-body-input-stream.c:487\nNew Location: libsoup/http1/soup-body-input-stream.c:499"}
{"question": "Was the location of the message 'Could not parse HTTP response' changed?", "answer": "Yes, the location was changed.\nOld Location: libsoup/soup-message-client-io.c:39\nNew Location: libsoup/http1/soup-client-message-io-http1.c:463"}
{"question": "What change was made to the dependency specification in the 'meson.build' file?", "answer": "The dependency for 'gmodule-2.0' was replaced with 'gmodule-no-export-2.0'.\n\nOld Code:\n```meson\n-gmodule_dep = dependency('gmodule-2.0', version : glib_required_version,\n                          fallback: ['glib', 'libgmodule_dep'])\n```\nNew Code:\n```meson\n+gmodule_dep = dependency('gmodule-no-export-2.0', version : glib_required_version,\n                          fallback: ['glib', 'libgmodule_dep'])\n```\nLocation: 'meson.build', line 101."}
{"question": "What change was made to the function 'soup_auth_digest_finalize' in the file 'libsoup/auth/soup-auth-digest.c'?", "answer": "A new line was added to free the 'priv->opaque' member. Old version:\n```c\ng_free (priv->nonce);\ng_free (priv->domain);\ng_free (priv->cnonce);\n```\nNew version:\n```c\ng_free (priv->nonce);\ng_free (priv->domain);\ng_free (priv->cnonce);\ng_free (priv->opaque);\n```"}
{"question": "What changes were made to the function 'parse_one_cookie' in the file 'libsoup/cookies/soup-cookie.c'?", "answer": "The function 'parse_one_cookie' in 'libsoup/cookies/soup-cookie.c' was modified to include a check for the combined length of 'cookie->name' and 'cookie->value'. If the combined length exceeds 4096 bytes, the cookie is freed and NULL is returned. Code added: 'if (strlen (cookie->name) + strlen (cookie->value) > 4096) { soup_cookie_free (cookie); return NULL; }'."}
{"question": "Was a new test function added in 'tests/cookies-test.c'?", "answer": "Yes, a new test function 'do_cookies_parsing_name_value_max_size' was added in 'tests/cookies-test.c'. This function tests the behavior of cookies with name and value sizes exceeding the limit of 4096 bytes."}
{"question": "Was a new test case added to the test suite in 'tests/cookies-test.c'?", "answer": "Yes, a new test case '/cookies/parsing/name-value-max-size' was added to the test suite in 'tests/cookies-test.c', which invokes the 'do_cookies_parsing_name_value_max_size' function."}
{"question": "What changes were made to the function 'do_host_big_header' in the file 'tests/misc-test.c'?", "answer": "A line was added to clear the error object. Old version did not include 'g_clear_error(&error);'. New version includes it at line 156."}
{"question": "What changes were made to the function 'redirect_handler' in the file 'tests/misc-test.c'?", "answer": "A line was added to unreference the 'body' object. Old version did not include 'g_bytes_unref(body);'. New version includes it at line 847."}
{"question": "What changes were made to the function 'on_frame_recv_callback' in the file 'libsoup/server/http2/soup-server-message-io-http2.c'?", "answer": "The function 'on_frame_recv_callback' was modified. Specifically, the check for 'msg_io->scheme', 'msg_io->authority', and 'msg_io->path' was updated to handle cases where 'scheme' and 'path' can be unset. Additionally, the decrement of 'io->in_callback' was added in early return cases. Old Code: 'if (msg_io->scheme == NULL || msg_io->authority == NULL || msg_io->path == NULL) return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;'. New Code: 'if (msg_io->authority == NULL) { io->in_callback--; return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE; }'."}
{"question": "Was the construction of the 'uri_string' variable in 'on_frame_recv_callback' modified?", "answer": "Yes, the construction of 'uri_string' was modified to handle cases where 'msg_io->path' is NULL. Old Code: 'uri_string = g_strdup_printf (\"%s://%s%s\", msg_io->scheme, msg_io->authority, msg_io->path);'. New Code: 'uri_string = g_strdup_printf (\"%s://%s%s\", msg_io->scheme, msg_io->authority, msg_io->path == NULL ? \"\" : msg_io->path);'."}
{"question": "Was the handling of the 'uri' variable in 'on_frame_recv_callback' changed?", "answer": "Yes, the handling of 'uri' was updated to include a decrement of 'io->in_callback' in the case of an early return. Old Code: 'if (uri == NULL) return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;'. New Code: 'if (uri == NULL) { io->in_callback--; return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE; }'."}
{"question": "What changes were made to the function 'parse_one_cookie' in the file 'libsoup/cookies/soup-cookie.c'?", "answer": "A new condition was added to check if both 'cookie->name' and 'cookie->value' are empty, and if true, the cookie is freed and NULL is returned.\n\nOld Code Block:\n```c\nparse_one_cookie (const char *header, GUri *origin)\n{\n    cookie->value = parse_value (&p, TRUE);\n    if (strlen (cookie->name) + strlen (cookie->value) > 4096) {\n        soup_cookie_free (cookie);\n        return NULL;\n    }\n}\n```\n\nNew Code Block:\n```c\nparse_one_cookie (const char *header, GUri *origin)\n{\n    cookie->value = parse_value (&p, TRUE);\n    if (!*cookie->name && !*cookie->value) {\n        soup_cookie_free (cookie);\n        return NULL;\n    }\n    if (strlen (cookie->name) + strlen (cookie->value) > 4096) {\n        soup_cookie_free (cookie);\n        return NULL;\n    }\n}\n```"}
{"question": "What changes were made to the function 'soup_message_headers_get_ranges_internal' in the file 'libsoup/soup-message-headers.c'?", "answer": "The function 'soup_message_headers_get_ranges_internal' was modified to decrement the index 'i' after removing an array element. Old Code Block: `g_array_remove_index (array, i);`. New Code Block: `g_array_remove_index (array, i); i--;`."}
{"question": "Was a new test file added in the commit? What is its name and location?", "answer": "Yes, a new test file named 'server-mem-limit-test.c' was added at location 'tests/server-mem-limit-test.c'."}
{"question": "What changes were made to the 'tests/meson.build' file?", "answer": "A new test named 'server-mem-limit' was added to the 'tests' array in the 'tests/meson.build' file. Old Code Block: `tests = [{'name': 'samesite'}, {'name': 'session'}, {'name': 'server-auth'}, {'name': 'server'}, {'name': 'sniffing', 'depends': [test_resources]}]`. New Code Block: `tests = [{'name': 'samesite'}, {'name': 'session'}, {'name': 'server-auth'}, {'name': 'server-mem-limit'}, {'name': 'server'}, {'name': 'sniffing', 'depends': [test_resources]}].`"}
{"question": "Was a new file added in the commit? If so, what is its name and path?", "answer": "Yes, a new file was added.\nNew File Path: `tests/ws-test-helper.c`."}
{"question": "Was a new executable target added in the build configuration? If so, what is its name and source file?", "answer": "Yes, a new executable target was added.\nTarget Name: `ws-test-helper`\nSource File: `ws-test-helper.c`\nBuild Configuration File: `tests/meson.build`."}
{"question": "Was a new function added in the file `tests/ws-test-helper.c`? If so, what is its name and signature?", "answer": "Yes, a new function was added.\nFunction Name: `on_sigint`\nSignature: `static gboolean on_sigint (AppState *app_state)`\nFile: `tests/ws-test-helper.c`."}
{"question": "Was a new main function added in the file `tests/ws-test-helper.c`? If so, what is its signature?", "answer": "Yes, a new main function was added.\nSignature: `int main (int argc, char *argv[])`\nFile: `tests/ws-test-helper.c`."}
{"question": "Was a new structure defined in the file `tests/ws-test-helper.c`? If so, what is its name and fields?", "answer": "Yes, a new structure was defined.\nStructure Name: `AppState`\nFields: `SoupWebsocketConnection *connection; gboolean closed;`\nFile: `tests/ws-test-helper.c`."}
