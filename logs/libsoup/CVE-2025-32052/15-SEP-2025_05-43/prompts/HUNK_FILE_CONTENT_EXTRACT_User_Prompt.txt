
    The Patch in standard Git Format is:
    <patch>
From f182429e5b1fc034050510da20c93256c4fa9652 Mon Sep 17 00:00:00 2001
From: Patrick Griffis <pgriffis@igalia.com>
Date: Sat, 16 Nov 2024 12:07:30 -0600
Subject: [PATCH] Fix heap buffer overflow in soup_content_sniffer_sniff

Co-Author: Ar Jun <pkillarjun@protonmail.com>
---
 libsoup/content-sniffer/soup-content-sniffer.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libsoup/content-sniffer/soup-content-sniffer.c b/libsoup/content-sniffer/soup-content-sniffer.c
index de0985eac..b62e48889 100644
--- a/libsoup/content-sniffer/soup-content-sniffer.c
+++ b/libsoup/content-sniffer/soup-content-sniffer.c
@@ -528,7 +528,7 @@ sniff_unknown (SoupContentSniffer *sniffer, GBytes *buffer,
                guint index_stream = 0;
                guint index_pattern = 0;
                gboolean skip_row = FALSE;
 
-			while ((index_stream < resource_length) &&
+			while ((index_stream < resource_length - 1) &&
 			       (index_pattern <= type_row->pattern_length)) {
 				/* Skip insignificant white space ("WS" in the spec) */
 				if (type_row->pattern[index_pattern] == ' ') {
    <end>

    The downstream codefile has diverged a bit from the upstream file for which this patch was created.
    The downstream code file in format <line_number>: <line_content> is:
    <code_file>
File: libsoup/content-sniffer/soup-content-sniffer.c
524: 		if (!sniff_scriptable && type_row->scriptable)
525: 			continue;
526: 
527: 		if (type_row->has_ws) {
528: 			guint index_stream = 0;
529: 			guint index_pattern = 0;
530: 			gboolean skip_row = FALSE;
531: 
532: 			while ((index_stream < resource_length) &&
533: 			       (index_pattern <= type_row->pattern_length)) {
534: 				/* Skip insignificant white space ("WS" in the spec) */
535: 				if (type_row->pattern[index_pattern] == ' ') {
536: 					if (resource[index_stream] == '\x09' ||
537: 					    resource[index_stream] == '\x0a' ||
538: 					    resource[index_stream] == '\x0c' ||
539: 					    resource[index_stream] == '\x0d' ||
540: 					    resource[index_stream] == '\x20')
541: 						index_stream++;
542: 					else
543: 						index_pattern++;
544: 				} else {
545: 					if ((type_row->mask[index_pattern] & resource[index_stream]) != type_row->pattern[index_pattern]) {
546: 						skip_row = TRUE;
547: 						break;
548: 					}


    <end>

    TASK:
    1. Find the corresponding Hunk Content from the patch in the file code.
        The Corresponding hunk in the file code could have some extra / missing lines.
        There could also be some whitespace / tab differences or newline differences.
    2. Give me ONLY the corresponding lines from the patch in the file code.
       Ensure that format (whitespace, tabs, newlines etc.) of the lines is exactly as in the file code.
       If there are some extra / missing lines in the corresponding hunk in the file code, INCLUDE them as well.
    3. Ensure that lines extracted are as close to the patch hunk as possible.
       
    I want to know what the corresponding hunk in the downstream file code looks like.
    Do not give any lines outside the corresponding hunk or any extra formatting tokens like ``` or <>
    Output:
    <corresponding_hunk_in_file_code>
    