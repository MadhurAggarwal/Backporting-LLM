
    The upstream patch in Standard Git Diff format is:
    <Patch>

    From f182429e5b1fc034050510da20c93256c4fa9652 Mon Sep 17 00:00:00 2001
    From: Patrick Griffis <pgriffis@igalia.com>
    Date: Sat, 16 Nov 2024 12:07:30 -0600
    Subject: [PATCH] Fix heap buffer overflow in soup_content_sniffer_sniff

    Co-Author: Ar Jun <pkillarjun@protonmail.com>
    ---
    libsoup/content-sniffer/soup-content-sniffer.c | 2 +-
    1 file changed, 1 insertion(+), 1 deletion(-)

    diff --git a/libsoup/content-sniffer/soup-content-sniffer.c b/libsoup/content-sniffer/soup-content-sniffer.c
    index de0985eac..b62e48889 100644
    --- a/libsoup/content-sniffer/soup-content-sniffer.c
    +++ b/libsoup/content-sniffer/soup-content-sniffer.c
    @@ -524,7 +524,7 @@ sniff_unknown (SoupContentSniffer *sniffer, GBytes *buffer,
                guint index_pattern = 0;
                gboolean skip_row = FALSE;
    
    -			while ((index_stream < resource_length) &&
    +			while ((index_stream < resource_length - 1) &&
                    (index_pattern <= type_row->pattern_length)) {
                    /* Skip insignificant white space ("WS" in the spec) */
                    if (type_row->pattern[index_pattern] == ' ') {
    -- 
    GitLab
    
    <end>

    This Patch was meant to fix the following issue in the libsoup package:
    <CVE>

    A flaw was found in libsoup. A vulnerability in the sniff_unknown() function may lead to heap buffer over-read.
    
    <end>

    The downstream file code has diverged from upstream.
    Downstream file code in format <line_number>: <line_content> is given below:
    <Downstream_Code>
File: libsoup/content-sniffer/soup-content-sniffer.c
524: 		if (!sniff_scriptable && type_row->scriptable)
525: 			continue;
526: 
527: 		if (type_row->has_ws) {
528: 			guint index_stream = 0;
529: 			guint index_pattern = 0;
530: 			gboolean skip_row = FALSE;
531: 
532: 			while ((index_stream < resource_length) &&
533: 			       (index_pattern <= type_row->pattern_length)) {
534: 				/* Skip insignificant white space ("WS" in the spec) */
535: 				if (type_row->pattern[index_pattern] == ' ') {
536: 					if (resource[index_stream] == '\x09' ||
537: 					    resource[index_stream] == '\x0a' ||
538: 					    resource[index_stream] == '\x0c' ||
539: 					    resource[index_stream] == '\x0d' ||
540: 					    resource[index_stream] == '\x20')
541: 						index_stream++;
542: 					else
543: 						index_pattern++;
544: 				} else {
545: 					if ((type_row->mask[index_pattern] & resource[index_stream]) != type_row->pattern[index_pattern]) {
546: 						skip_row = TRUE;
547: 						break;
548: 					}


    <end>

    TASK:
    Update the patch so that it cleanly applies to the downstream file code.
        1. Find the hunk content from the patch in the downstream file code.
        2. Adjust the line numbers in the patch hunk headers to match the downstream file code
        3. Adjust whitespace, '	' in the patch hunk content to match the downstream file code.
        4. Ensure that the patch logic is NOT changed.
        5. Do NOT give any extra tokens like diff ``` or <patch>. Only give final patch that applies cleanly to downstream file code.
    Only output the final patch in STANDARD GIT diff format.
    