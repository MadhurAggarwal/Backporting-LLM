
    The Patch in standard Git Format is:
    <patch>
diff --git a/libsoup/content-sniffer/soup-content-sniffer.c b/libsoup/content-sniffer/soup-content-sniffer.c
index de0985eac..b62e48889 100644
--- a/libsoup/content-sniffer/soup-content-sniffer.c
+++ b/libsoup/content-sniffer/soup-content-sniffer.c
@@ -532,7 +532,7 @@ sniff_unknown (SoupContentSniffer *sniffer, GBytes *buffer,
 			while ((index_stream < resource_length - 1) &&
 			       (index_pattern <= type_row->pattern_length)) {
 				/* Skip insignificant white space ("WS" in the spec) */
-				if (type_row->pattern[index_pattern] == ' ') {
+				if (type_row->pattern[index_pattern] == ' ') {
 					if (resource[index_stream] == '\x09' ||
 					    resource[index_stream] == '\x0a' ||
 					    resource[index_stream] == '\x0c' ||
    <end>

    As per this patch:
Output:
First Mentioned Unchanged Line: while ((index_stream < resource_length - 1) &&
First Changed Line: +				if (type_row->pattern[index_pattern] == ' ') {

    Now, from the following file code, find the line number of the above lines.
    In case the line is present multiple times in the file code, use the patch as ONLY REFERENCE to find the correct occurance.
    <file_code>
File: libsoup/content-sniffer/soup-content-sniffer.c
524: 		if (!sniff_scriptable && type_row->scriptable)
525: 			continue;
526: 
527: 		if (type_row->has_ws) {
528: 			guint index_stream = 0;
529: 			guint index_pattern = 0;
530: 			gboolean skip_row = FALSE;
531: 
532: 			while ((index_stream < resource_length) &&
533: 			       (index_pattern <= type_row->pattern_length)) {
534: 				/* Skip insignificant white space ("WS" in the spec) */
535: 				if (type_row->pattern[index_pattern] == ' ') {
536: 					if (resource[index_stream] == '\x09' ||
537: 					    resource[index_stream] == '\x0a' ||
538: 					    resource[index_stream] == '\x0c' ||
539: 					    resource[index_stream] == '\x0d' ||
540: 					    resource[index_stream] == '\x20')
541: 						index_stream++;
542: 					else
543: 						index_pattern++;
544: 				} else {
545: 					if ((type_row->mask[index_pattern] & resource[index_stream]) != type_row->pattern[index_pattern]) {
546: 						skip_row = TRUE;
547: 						break;
548: 					}


    <end>

    Find line numbers of the First Mentioned Unchanged Line and the First Changed Line in this code file.
    DO NOT output any extra tokens, only the line numbers in the following format:
    Output:
    First Mentioned Unchanged Line Number: <line number>: <line content>
    First Changed Line Number: <line number>: <line content>
    